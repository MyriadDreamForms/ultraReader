@model IEnumerable<ultraReader.Models.Entities.WebtoonInfo>

@{
    ViewData["Title"] = "Webtoon Yönetimi";
}

<div class="container mx-auto px-4 py-6">
    <div class="flex flex-col md:flex-row justify-between items-center mb-6">
        <h1 class="text-2xl md:text-3xl font-bold text-gray-800 dark:text-gray-200 mb-4 md:mb-0">Webtoon Yönetimi</h1>
        <div class="flex flex-wrap gap-2">
            <a asp-action="YeniWebtoon" class="btn-success">
                <i class="bi bi-plus-circle mr-2"></i>Yeni Webtoon Ekle
            </a>
            <a asp-action="Index" class="btn-secondary">
                <i class="bi bi-arrow-left mr-2"></i>Admin Paneline Dön
            </a>
        </div>
    </div>
    
    @if (TempData["Message"] != null)
    {
        <div class="mb-4 p-4 rounded-md border @(TempData["MessageType"]?.ToString() == "success" 
            ? "bg-green-50 border-green-300 text-green-700 dark:bg-green-900/30 dark:border-green-800 dark:text-green-300" 
            : TempData["MessageType"]?.ToString() == "warning" 
                ? "bg-yellow-50 border-yellow-300 text-yellow-700 dark:bg-yellow-900/30 dark:border-yellow-800 dark:text-yellow-300" 
                : TempData["MessageType"]?.ToString() == "danger" 
                    ? "bg-red-50 border-red-300 text-red-700 dark:bg-red-900/30 dark:border-red-800 dark:text-red-300" 
                    : "bg-blue-50 border-blue-300 text-blue-700 dark:bg-blue-900/30 dark:border-blue-800 dark:text-blue-300")">
            <div class="flex items-center">
                <div class="flex-shrink-0 mr-3">
                    <i class="bi @(TempData["MessageType"]?.ToString() == "success" 
                        ? "bi-check-circle" 
                        : TempData["MessageType"]?.ToString() == "warning" 
                            ? "bi-exclamation-triangle" 
                            : TempData["MessageType"]?.ToString() == "danger" 
                                ? "bi-x-circle" 
                                : "bi-info-circle")"></i>
                </div>
                <div>@TempData["Message"]</div>
            </div>
        </div>
    }
    
    <!-- Arama ve Filtreleme -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md mb-6 p-4">
        <div class="flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-4">
            <div class="flex-grow">
                <div class="relative">
                    <input type="text" id="searchInput" class="form-input pl-10 w-full" placeholder="Webtoon başlığı ara...">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <i class="bi bi-search text-gray-400"></i>
                    </div>
                </div>
            </div>
            <div class="md:w-1/4">
                <select id="statusFilter" class="form-select w-full">
                    <option value="">Tüm Durumlar</option>
                    <option value="Devam Ediyor">Devam Ediyor</option>
                    <option value="Tamamlandı">Tamamlandı</option>
                    <option value="Durduruldu">Durduruldu</option>
                </select>
            </div>
            <div class="md:w-1/4">
                <select id="genreFilter" class="form-select w-full">
                    <option value="">Tüm Türler</option>
                    @foreach (var genre in Model.SelectMany(w => w.Genres).Distinct().OrderBy(g => g))
                    {
                        <option value="@genre">@genre</option>
                    }
                </select>
            </div>
        </div>
    </div>
    
    <div id="webtoonList" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
        @foreach (var webtoon in Model)
        {
            <div class="webtoon-item bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden h-full flex flex-col" 
                 data-title="@webtoon.Title.ToLower()" 
                 data-author="@webtoon.Author.ToLower()"
                 data-status="@webtoon.Status"
                 data-genres="@string.Join(" ", webtoon.Genres.Select(g => g.ToLower()))">
                <div class="relative aspect-[3/4] overflow-hidden">
                    @if (!string.IsNullOrEmpty(webtoon.CoverImage))
                    {
                        <img src="~/webtoons/@webtoon.FolderName/@webtoon.CoverImage" 
                             class="w-full h-full object-cover" alt="@webtoon.Title">
                    }
                    else
                    {
                        <div class="w-full h-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center">
                            <i class="bi bi-image text-4xl text-gray-400 dark:text-gray-500"></i>
                        </div>
                    }
                    <div class="absolute top-0 right-0 m-2">
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium 
                                      @(webtoon.Status == "Devam Ediyor" 
                                          ? "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300" 
                                          : webtoon.Status == "Tamamlandı" 
                                              ? "bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300" 
                                              : "bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300")">
                            @webtoon.Status
                        </span>
                    </div>
                </div>
                <div class="p-4 flex-grow">
                    <h5 class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-2">@webtoon.Title</h5>
                    <p class="text-sm text-gray-600 dark:text-gray-400">
                        <i class="bi bi-person-fill mr-1"></i> @webtoon.Author
                    </p>
                    <div class="flex flex-wrap mt-2 mb-3">
                        @foreach (var genre in webtoon.Genres)
                        {
                            <span class="inline-block bg-gray-200 dark:bg-gray-700 rounded-full px-2 py-1 text-xs font-semibold text-gray-700 dark:text-gray-300 mr-1 mb-1">@genre</span>
                        }
                    </div>
                </div>
                <div class="p-4 pt-0 border-t border-gray-200 dark:border-gray-700">
                    <div class="flex flex-wrap gap-2">
                        <a asp-action="BolumYonetim" asp-route-webtoonId="@webtoon.Id" class="btn-primary text-xs py-1 px-2">
                            <i class="bi bi-list-ul mr-1"></i> Bölümler
                        </a>
                        <a asp-action="WebtoonDuzenle" asp-route-id="@webtoon.Id" class="btn-warning text-xs py-1 px-2">
                            <i class="bi bi-pencil-square mr-1"></i> Düzenle
                        </a>
                        <button type="button" class="btn-danger text-xs py-1 px-2"
                                data-modal-toggle="deleteModal_@webtoon.Id">
                            <i class="bi bi-trash mr-1"></i> Sil
                        </button>
                    </div>
                </div>
                
                <!-- Silme Modal -->
                <div id="deleteModal_@webtoon.Id" 
                     class="fixed z-10 inset-0 overflow-y-auto hidden" 
                     aria-labelledby="modal-title" role="dialog" aria-modal="true">
                    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
                        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
                        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
                        <div class="inline-block align-bottom bg-white dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
                            <div class="bg-white dark:bg-gray-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                                <div class="sm:flex sm:items-start">
                                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 dark:bg-red-900/30 sm:mx-0 sm:h-10 sm:w-10">
                                        <i class="bi bi-exclamation-triangle text-red-600 dark:text-red-500"></i>
                                    </div>
                                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                                        <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-gray-200" id="modal-title">
                                            Webtoon'u Sil
                                        </h3>
                                        <div class="mt-2">
                                            <p class="text-sm text-gray-500 dark:text-gray-400">
                                                <strong>@webtoon.Title</strong> adlı webtoon'u silmek istediğinizden emin misiniz?
                                            </p>
                                            <p class="text-sm text-red-500 dark:text-red-400 mt-2">
                                                Bu işlem geri alınamaz ve tüm bölümler ile dosyalar silinecektir!
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                                <form asp-action="WebtoonSil" method="post">
                                    <input type="hidden" name="id" value="@webtoon.Id" />
                                    <button type="submit" class="btn-danger">
                                        Sil
                                    </button>
                                </form>
                                <button type="button" 
                                        class="mt-3 sm:mt-0 sm:mr-3 btn-secondary"
                                        data-modal-hide="deleteModal_@webtoon.Id">
                                    İptal
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    
    <!-- Sonuç bulunamadı bildirimi -->
    <div id="noResults" class="hidden alert alert-info mt-4">
        <div class="flex items-center">
            <i class="bi bi-info-circle mr-2"></i>
            <p>Arama kriterlerinize uygun webtoon bulunamadı.</p>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Modal kontrolleri
            document.querySelectorAll('[data-modal-toggle]').forEach(toggle => {
                toggle.addEventListener('click', function() {
                    const targetId = this.getAttribute('data-modal-toggle');
                    const modal = document.getElementById(targetId);
                    if (modal) {
                        modal.classList.remove('hidden');
                    }
                });
            });
            
            document.querySelectorAll('[data-modal-hide]').forEach(hide => {
                hide.addEventListener('click', function() {
                    const targetId = this.getAttribute('data-modal-hide');
                    const modal = document.getElementById(targetId);
                    if (modal) {
                        modal.classList.add('hidden');
                    }
                });
            });
            
            // Arama ve filtreleme işlemleri
            const searchInput = document.getElementById('searchInput');
            const statusFilter = document.getElementById('statusFilter');
            const genreFilter = document.getElementById('genreFilter');
            const webtoonItems = document.querySelectorAll('.webtoon-item');
            const noResults = document.getElementById('noResults');
            
            function filterWebtoons() {
                const searchText = searchInput.value.toLowerCase();
                const status = statusFilter.value.toLowerCase();
                const genre = genreFilter.value.toLowerCase();
                
                let resultsFound = false;
                
                webtoonItems.forEach(function(item) {
                    const title = item.getAttribute('data-title');
                    const author = item.getAttribute('data-author');
                    const itemStatus = item.getAttribute('data-status').toLowerCase();
                    const genres = item.getAttribute('data-genres');
                    
                    const matchesSearch = title.includes(searchText) || author.includes(searchText);
                    const matchesStatus = status === '' || itemStatus === status;
                    const matchesGenre = genre === '' || genres.includes(genre);
                    
                    if (matchesSearch && matchesStatus && matchesGenre) {
                        item.classList.remove('hidden');
                        resultsFound = true;
                    } else {
                        item.classList.add('hidden');
                    }
                });
                
                if (resultsFound) {
                    noResults.classList.add('hidden');
                } else {
                    noResults.classList.remove('hidden');
                }
            }
            
            // Event listeners
            searchInput.addEventListener('keyup', filterWebtoons);
            statusFilter.addEventListener('change', filterWebtoons);
            genreFilter.addEventListener('change', filterWebtoons);
        });
    </script>
} 