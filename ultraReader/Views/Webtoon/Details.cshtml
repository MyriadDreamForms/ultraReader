@model ultraReader.Models.DTOs.WebtoonDetailsViewModel
@{
    ViewData["Title"] = $"{Model.Webtoon.Title} - Detaylar";
}

<div class="container mx-auto px-4 py-8">
    <!-- Üst bilgi -->
    <div class="mb-8">
        <a asp-controller="WebtoonList" asp-action="Index" class="inline-flex items-center text-primary hover:text-primary-dark transition-colors group">
            <i class="bi bi-arrow-left mr-2 group-hover:-translate-x-1 transition-transform"></i> Webtoon Listesine Dön
        </a>
    </div>

    <!-- Webtoon detayları -->
    <div class="flex flex-col lg:flex-row bg-white dark:bg-gray-800 rounded-xl shadow-xl overflow-hidden transform transition-all">
        <!-- Kapak resmi -->
        <div class="lg:w-1/3 xl:w-1/4 p-6 flex justify-center bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-900 dark:to-gray-800">
            <div class="relative group">
                <img src="@Model.CoverImageUrl" alt="@Model.Webtoon.Title" 
                     class="object-cover h-96 w-full md:w-auto rounded-lg shadow-lg group-hover:shadow-2xl transition-all duration-300 transform group-hover:scale-[1.02]"
                     onerror="this.src='/images/no-cover.png';" />
                <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-10 transition-all duration-300 rounded-lg"></div>
            </div>
        </div>
        
        <!-- Webtoon bilgileri -->
        <div class="lg:w-2/3 xl:w-3/4 p-8">
            <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6">
                <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4 md:mb-0 font-heading">
                    @Model.Webtoon.Title
                </h1>
                
                <div class="flex flex-wrap gap-2">
                    <!-- Favorilere ekle butonu -->
                    <button id="addToFavorites" 
                            class="btn-outline flex items-center justify-center px-4 py-2 rounded-full hover:bg-primary hover:text-white hover:border-primary transition-all duration-200" 
                            data-webtoon-id="@Model.Webtoon.Id" data-webtoon-name="@Model.Webtoon.FolderName">
                        <i class="bi bi-heart mr-2"></i> Favorilere Ekle
                    </button>
                    
                    <!-- Yönetim butonu (yetkiliyse) -->
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-controller="Webtoon" asp-action="Edit" asp-route-name="@Model.Webtoon.FolderName" 
                           class="btn-secondary flex items-center justify-center px-4 py-2 rounded-full transition-all duration-200">
                            <i class="bi bi-pencil-square mr-2"></i> Düzenle
                        </a>
                    }
                </div>
            </div>
            
            <!-- Webtoon meta bilgileri -->
            <div class="flex flex-wrap gap-3 mb-6">
                @foreach (var genre in Model.Webtoon.Genres)
                {
                    <span class="px-3 py-1 rounded-full text-sm font-medium bg-primary-100 text-primary-800 dark:bg-primary-900/40 dark:text-primary-300">
                        @genre
                    </span>
                }
                <span class="px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">
                    <i class="bi bi-person-fill mr-1"></i> @Model.Webtoon.Author
                </span>
                <span class="px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">
                    <i class="bi bi-calendar-fill mr-1"></i> @Model.Webtoon.CreatedAt.ToString("yyyy")
                </span>
                <span class="px-3 py-1 rounded-full text-sm font-medium bg-indigo-100 text-indigo-800 dark:bg-indigo-900/40 dark:text-indigo-300">
                    <i class="bi bi-eye-fill mr-1"></i> @Model.TotalViews görüntülenme
                </span>
            </div>
            
            <!-- Webtoon açıklaması -->
            <div class="mb-8">
                <h2 class="text-xl font-semibold mb-3 text-gray-800 dark:text-gray-200">Özet</h2>
                <div class="bg-gray-50 dark:bg-gray-700/50 rounded-lg p-4 border-l-4 border-primary shadow-inner">
                    <p class="text-gray-700 dark:text-gray-300 whitespace-pre-line">
                        @(string.IsNullOrEmpty(Model.Webtoon.Description) ? "Bu webtoon için henüz bir açıklama eklenmemiş." : Model.Webtoon.Description)
                    </p>
                </div>
            </div>
            
            <!-- Okumaya başla butonu -->
            @if (Model.Chapters.Any())
            {
                <div class="mb-6">
                    <a asp-controller="Reader" asp-action="Index" 
                       asp-route-name="@Model.Webtoon.FolderName" 
                       asp-route-chapter="@Model.Chapters.OrderBy(c => c.ChapterNumber).First().FolderName" 
                       class="btn-primary text-lg py-3 px-8 rounded-full shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300 inline-flex items-center">
                        <i class="bi bi-book mr-2"></i> Okumaya Başla
                    </a>
                </div>
            }
            
            <!-- Sosyal paylaşım -->
            <div class="flex space-x-4 mt-6">
                <a href="#" class="w-10 h-10 flex items-center justify-center rounded-full bg-gray-100 dark:bg-gray-700 text-gray-500 hover:bg-blue-500 hover:text-white transition-all duration-300">
                    <i class="bi bi-facebook text-lg"></i>
                </a>
                <a href="#" class="w-10 h-10 flex items-center justify-center rounded-full bg-gray-100 dark:bg-gray-700 text-gray-500 hover:bg-black hover:text-white transition-all duration-300">
                    <i class="bi bi-twitter-x text-lg"></i>
                </a>
                <a href="#" class="w-10 h-10 flex items-center justify-center rounded-full bg-gray-100 dark:bg-gray-700 text-gray-500 hover:bg-green-500 hover:text-white transition-all duration-300">
                    <i class="bi bi-whatsapp text-lg"></i>
                </a>
                <a href="#" class="w-10 h-10 flex items-center justify-center rounded-full bg-gray-100 dark:bg-gray-700 text-gray-500 hover:bg-purple-500 hover:text-white transition-all duration-300">
                    <i class="bi bi-share text-lg"></i>
                </a>
            </div>
        </div>
    </div>

    <!-- Bölümler listesi -->
    <div class="mt-16">
        <h2 class="text-2xl font-bold mb-6 text-gray-900 dark:text-gray-100 font-heading flex items-center">
            <i class="bi bi-list-ul mr-2 text-primary"></i> Bölümler 
            <span class="ml-2 text-sm font-normal px-2 py-1 bg-gray-200 dark:bg-gray-700 rounded-full text-gray-700 dark:text-gray-300">
                @Model.Chapters.Count bölüm
            </span>
        </h2>
        
        @if (!Model.Chapters.Any())
        {
            <div class="bg-blue-50 dark:bg-blue-900/20 border-l-4 border-blue-400 dark:border-blue-600 p-4 rounded-md">
                <div class="flex items-center">
                    <i class="bi bi-info-circle-fill text-blue-500 dark:text-blue-400 mr-2 text-xl"></i>
                    <p class="text-blue-700 dark:text-blue-300">Bu webtoon için henüz bölüm eklenmemiş.</p>
                </div>
            </div>
        }
        else
        {
            <!-- Bölüm sıralama seçenekleri -->
            <div class="flex justify-between items-center mb-6">
                <div class="inline-flex bg-gray-100 dark:bg-gray-700 rounded-full p-1">
                    <button id="sortNewest" class="px-4 py-2 rounded-full text-sm font-medium bg-primary text-white transition-all duration-200">
                        <i class="bi bi-arrow-down mr-1"></i> En Yeni
                    </button>
                    <button id="sortOldest" class="px-4 py-2 rounded-full text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-all duration-200">
                        <i class="bi bi-arrow-up mr-1"></i> En Eski
                    </button>
                </div>
                
                @if (User.IsInRole("Admin"))
                {
                    <a asp-controller="Webtoon" asp-action="AddChapter" asp-route-name="@Model.Webtoon.FolderName" 
                       class="btn-primary text-sm flex items-center rounded-full px-4 py-2">
                        <i class="bi bi-plus-circle mr-2"></i> Yeni Bölüm Ekle
                    </a>
                }
            </div>
            
            <!-- Bölümler listesi -->
            <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden">
                <ul class="divide-y divide-gray-200 dark:divide-gray-700" id="chapters-list">
                    @foreach (var chapter in Model.Chapters.OrderByDescending(c => c.ChapterNumber))
                    {
                        <li class="chapter-list-item transition-all duration-200" 
                            data-chapter-number="@chapter.ChapterNumber"
                            data-published-date="@chapter.PublishedAt.ToString("yyyy-MM-dd")">
                            <a asp-controller="Reader" asp-action="Index" 
                               asp-route-name="@Model.Webtoon.FolderName" 
                               asp-route-chapter="@chapter.FolderName"
                               class="flex flex-col md:flex-row md:items-center md:justify-between p-4 hover:bg-gray-50 dark:hover:bg-gray-700 group transition duration-200 ease-in-out">
                                <div class="flex items-center">
                                    <div class="flex items-center justify-center min-w-12 h-12 rounded-full bg-primary-100 dark:bg-primary-900/30 text-primary-800 dark:text-primary-300 font-bold mr-3">
                                        @chapter.ChapterNumber
                                    </div>
                                    <div>
                                        <span class="text-gray-900 dark:text-white font-medium block">
                                            @(string.IsNullOrEmpty(chapter.Title) ? $"Bölüm {chapter.ChapterNumber}" : chapter.Title)
                                        </span>
                                        <span class="text-gray-500 dark:text-gray-400 text-sm">
                                            @chapter.PublishedAt.ToString("dd MMM yyyy")
                                        </span>
                                    </div>
                                </div>
                                <div class="flex items-center ml-0 md:ml-4 mt-2 md:mt-0">
                                    <span class="text-gray-500 dark:text-gray-400 flex items-center mr-4">
                                        <i class="bi bi-eye mr-1"></i> @chapter.Views
                                    </span>
                                    <span class="btn text-sm py-1 px-3 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full group-hover:bg-primary group-hover:text-white transition-colors duration-200">
                                        <i class="bi bi-book-half mr-1"></i> Oku
                                    </span>
                                </div>
                            </a>
                        </li>
                    }
                </ul>
            </div>
        }
    </div>
    
    <!-- Yorumlar Bölümü -->
    <div class="mt-16">
        <h2 class="text-2xl font-bold mb-6 text-gray-900 dark:text-gray-100 font-heading flex items-center">
            <i class="bi bi-chat-dots mr-2 text-primary"></i> Yorumlar 
            <span class="ml-2 text-sm font-normal px-2 py-1 bg-gray-200 dark:bg-gray-700 rounded-full text-gray-700 dark:text-gray-300">
                @Model.Comments.Count yorum
            </span>
        </h2>
        
        <!-- Yorum formu -->
        <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 mb-8">
            <form asp-controller="Webtoon" asp-action="AddComment" method="post" class="space-y-5">
                <input type="hidden" name="WebtoonId" value="@Model.Webtoon.Id" />
                <input type="hidden" name="WebtoonFolderName" value="@Model.Webtoon.FolderName" />
                <div class="form-group">
                    <label for="Content" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Yorumunuz</label>
                    <textarea name="Content" id="Content" class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-primary focus:border-primary transition-colors" rows="3" placeholder="Bu webtoon hakkında ne düşünüyorsunuz?"></textarea>
                </div>
                <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
                    <div class="flex items-center space-x-2">
                        <span class="text-gray-600 dark:text-gray-300">Puan:</span>
                        <div class="rating-stars flex">
                            @for (int i = 5; i >= 1; i--)
                            {
                                <input type="radio" id="star@(i)" name="Rating" value="@i" class="hidden" @(i == 5 ? "checked" : "") />
                                <label for="star@(i)" class="text-yellow-400 text-xl cursor-pointer hover:scale-110 transition-transform">
                                    <i class="bi bi-star-fill"></i>
                                </label>
                            }
                        </div>
                    </div>
                    <button type="submit" class="btn-primary flex items-center justify-center px-6 py-2 rounded-full">
                        <i class="bi bi-send mr-2"></i> Yorum Yap
                    </button>
                </div>
            </form>
        </div>
        
        <!-- Yorumlar listesi -->
        @if (!Model.Comments.Any())
        {
            <div class="bg-yellow-50 dark:bg-yellow-900/20 border-l-4 border-yellow-400 dark:border-yellow-600 p-4 rounded-lg">
                <div class="flex items-center">
                    <i class="bi bi-chat-left-text text-yellow-500 dark:text-yellow-400 mr-2 text-xl"></i>
                    <p class="text-yellow-700 dark:text-yellow-300">Henüz hiç yorum yapılmamış. İlk yorumu sen yap!</p>
                </div>
            </div>
        }
        else
        {
            <div class="space-y-6" id="comments-container">
                @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
                {
                    <div class="bg-white dark:bg-gray-800 p-5 rounded-xl shadow-md hover:shadow-lg transition-shadow">
                        <div class="flex justify-between mb-4">
                            <div class="flex items-center">
                                <div class="h-10 w-10 rounded-full bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-300 flex items-center justify-center font-medium text-lg">
                                    @comment.UserName.Substring(0, 1).ToUpper()
                                </div>
                                <div class="ml-3">
                                    <p class="text-gray-900 dark:text-white font-medium">@comment.UserName</p>
                                    <p class="text-gray-500 dark:text-gray-400 text-xs">@comment.CreatedAt.ToString("dd MMM yyyy HH:mm")</p>
                                </div>
                            </div>
                            <div class="flex items-center">
                                <div class="flex">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= comment.Rating)
                                        {
                                            <i class="bi bi-star-fill text-yellow-400"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-star text-gray-300 dark:text-gray-600"></i>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="bg-gray-50 dark:bg-gray-700/30 p-3 rounded-lg">
                            <p class="text-gray-700 dark:text-gray-300">@comment.Content</p>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
    
    <!-- JavaScript için bölüm -->
    @section Scripts {
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                // Sıralama butonları için olay dinleyicileri
                const sortNewestBtn = document.getElementById('sortNewest');
                const sortOldestBtn = document.getElementById('sortOldest');
                const chaptersList = document.getElementById('chapters-list');
                const chapterItems = document.querySelectorAll('.chapter-list-item');
                
                // Favorilere ekle butonu
                const addToFavoritesBtn = document.getElementById('addToFavorites');
                
                // En yeni sıralama
                sortNewestBtn.addEventListener('click', function() {
                    sortNewestBtn.classList.add('bg-primary', 'text-white');
                    sortNewestBtn.classList.remove('text-gray-700', 'dark:text-gray-300', 'hover:bg-gray-200', 'dark:hover:bg-gray-600');
                    
                    sortOldestBtn.classList.remove('bg-primary', 'text-white');
                    sortOldestBtn.classList.add('text-gray-700', 'dark:text-gray-300', 'hover:bg-gray-200', 'dark:hover:bg-gray-600');
                    
                    sortChapters('desc');
                });
                
                // En eski sıralama
                sortOldestBtn.addEventListener('click', function() {
                    sortOldestBtn.classList.add('bg-primary', 'text-white');
                    sortOldestBtn.classList.remove('text-gray-700', 'dark:text-gray-300', 'hover:bg-gray-200', 'dark:hover:bg-gray-600');
                    
                    sortNewestBtn.classList.remove('bg-primary', 'text-white');
                    sortNewestBtn.classList.add('text-gray-700', 'dark:text-gray-300', 'hover:bg-gray-200', 'dark:hover:bg-gray-600');
                    
                    sortChapters('asc');
                });
                
                // Bölümleri sıralama fonksiyonu
                function sortChapters(direction) {
                    const chaptersArray = Array.from(chapterItems);
                    
                    chaptersArray.sort((a, b) => {
                        const aNumber = parseInt(a.dataset.chapterNumber);
                        const bNumber = parseInt(b.dataset.chapterNumber);
                        
                        if (direction === 'asc') {
                            return aNumber - bNumber;
                        } else {
                            return bNumber - aNumber;
                        }
                    });
                    
                    chaptersArray.forEach(chapter => {
                        chaptersList.appendChild(chapter);
                    });
                }
                
                // Favorilere ekleme işlevi
                if (addToFavoritesBtn) {
                    addToFavoritesBtn.addEventListener('click', async function() {
                        const webtoonId = this.dataset.webtoonId;
                        const webtoonName = this.dataset.webtoonName;
                        
                        try {
                            const response = await fetch('/User/AddToFavorites', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    webtoonId: webtoonId
                                })
                            });
                            
                            if (response.ok) {
                                // Buton görünümünü güncelle
                                this.innerHTML = '<i class="bi bi-heart-fill mr-2"></i> Favorilerde';
                                this.classList.add('bg-primary', 'text-white');
                                this.disabled = true;
                            }
                        } catch (error) {
                            console.error('Favorilere eklenirken hata oluştu:', error);
                        }
                    });
                }
                
                // Yıldız derecelendirme sistemi
                const ratingInputs = document.querySelectorAll('.rating-stars input');
                const ratingLabels = document.querySelectorAll('.rating-stars label');
                
                ratingLabels.forEach((label, index) => {
                    label.addEventListener('mouseover', () => {
                        for (let i = 0; i <= index; i++) {
                            ratingLabels[i].classList.add('text-yellow-500');
                        }
                        for (let i = index + 1; i < ratingLabels.length; i++) {
                            ratingLabels[i].classList.remove('text-yellow-500');
                        }
                    });
                    
                    label.addEventListener('mouseout', () => {
                        ratingLabels.forEach((label, i) => {
                            if (!ratingInputs[i].checked) {
                                label.classList.remove('text-yellow-500');
                            }
                        });
                        updateStarsBasedOnSelection();
                    });
                    
                    label.addEventListener('click', () => {
                        updateStarsBasedOnSelection();
                    });
                });
                
                function updateStarsBasedOnSelection() {
                    ratingInputs.forEach((input, index) => {
                        if (input.checked) {
                            for (let i = 0; i <= index; i++) {
                                ratingLabels[i].classList.add('text-yellow-500');
                            }
                            for (let i = index + 1; i < ratingLabels.length; i++) {
                                ratingLabels[i].classList.remove('text-yellow-500');
                            }
                        }
                    });
                }
                
                // Sayfa yüklendiğinde varsayılan sıralamayı uygula
                updateStarsBasedOnSelection();
            });
        </script>
    }
} 